<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark RadioButton component.  

       @see spark.components.RadioButton
       @see spark.components.RadioButtonGroup
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 alpha.disabledStates="0.5"
			 width="32" height="26">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.RadioButton")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
           For button, the graphics are colorized but the label is not. */      
    </fx:Script>
    
    <fx:Script>
        <![CDATA[
        /** 
         * @private 
         */     
        private static const focusExclusions:Array = ["labelDisplay"];

        /**
         *  @private
         */
        override public function get focusSkinExclusions():Array { return focusExclusions;};
        ]]>
    </fx:Script>
    
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
    </s:states>
                         
	<s:BitmapImage smooth="true" source="@Embed('../../../../../../../assets/images/chat/tab_disabled.png')"
				   includeIn="disabled,over,down,up" horizontalCenter="0" verticalCenter="0"/>
	
	<s:BitmapImage includeIn="upAndSelected,overAndSelected,downAndSelected,disabledAndSelected" smooth="true"
				   source="@Embed('../../../../../../../assets/images/chat/tab_down.png')"
				   horizontalCenter="0" verticalCenter="0" />		

	
	<s:BitmapImage smooth="true" source="@Embed('../../../../../../../assets/images/chat/whisper.png')"
				   includeIn="disabled,over,down,up" horizontalCenter="0" verticalCenter="0"/>
	
	<s:BitmapImage includeIn="upAndSelected,overAndSelected,downAndSelected,disabledAndSelected" smooth="true"
				   source="@Embed('../../../../../../../assets/images/chat/whisper_Select.png')"
				   horizontalCenter="0" verticalCenter="0" />		
      
    <!-- Label -->
    <!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
</s:SparkSkin>
