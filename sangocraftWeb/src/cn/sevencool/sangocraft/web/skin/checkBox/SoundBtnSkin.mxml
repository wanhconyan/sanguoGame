<?xml version="1.0" encoding="utf-8"?>

<!--
project: sangocraft_Web
@class: SoundBtnSkin
@author: wangtaofeng
@usage: 声音按钮皮肤
@since: 2013-10-21
@modified: 2013-10-21
@modifier: wangtaofeng
-->

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark CheckBox component.  

@see spark.components.CheckBox

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 alpha.disabledStates="0.5"
			 width="21" height="21">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.CheckBox")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. 
		For button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = ["labelDisplay", "check"];
		
		/** 
		 * @private 
		 */     
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/* Define the symbol fill items that should be colored by the "symbolColor" style. */
		static private const symbols:Array = ["checkMarkFill"];
		
		/**
		 * @private 
		 */
		override public function get symbolItems():Array {return symbols};
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			/** 
			 * @private 
			 */     
			private static const focusExclusions:Array = ["labelDisplay"];
			
			/**
			 * @private
			 */
			override public function get focusSkinExclusions():Array { return focusExclusions;};
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
	</s:states>
	
	<s:BitmapImage includeIn="up,down" right="0" smooth="true"
				   source="@Embed('../../../../../../..//assets/images/playerInfo/closeSound_r.png')"/>
	
	<s:BitmapImage includeIn="over,disabled" right="0" smooth="true"
				   source="@Embed('../../../../../../..//assets/images/playerInfo/closeSound_m.png')"/>
	
	<s:BitmapImage includeIn="upAndSelected,downAndSelected " right="0" smooth="true"
				   source="@Embed('../../../../../../..//assets/images/playerInfo/open_r.png')"/>
	
	<s:BitmapImage includeIn="overAndSelected,disabledAndSelected" right="0" smooth="true"
				   source="@Embed('../../../../../../..//assets/images/playerInfo/open_m.png')"/>

	<s:Path left="2" top="0" includeIn="selectedStates" id="check" itemCreationPolicy="immediate" visible="false"
			data="M 9.2 0.1 L 4.05 6.55 L 3.15 5.0 L 0.05 5.0 L 4.6 9.7 L 12.05 0.1 L 9.2 0.1">        
		<s:fill>
			<!--- 
			@private 
			The solid color fill for the CheckBox's checkmark. The default alpha is .9, and the default fill color is 0x000000. 
			-->
			<s:SolidColor id="checkMarkFill" color="0" alpha="0.8" />
		</s:fill>
	</s:Path>
</s:SparkSkin>
