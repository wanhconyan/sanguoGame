<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 addedToStage="group1_addedToStageHandler(event)"
		 removedFromStage="group1_removedFromStageHandler(event)"
		 width="72" height="73" creationComplete="group1_creationCompleteHandler(event)"
		 implements="mx.core.IDataRenderer"  xmlns:symbols="cn.sevencool.sangocraft.web.symbols.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			/**
			 * @private
			 */
			public function set itemShowState(value:String):void
			{
				_itemShowState = value;
			}

			private var cleanItem:Bitmap = null ;
			
			private var _mouseBeenDown:Boolean = false ;
			/**
			 * 物品显示状态--显示等级
			 * */
			public static const SHOWLVL:String = 'showLvl' ;
			/**
			 * 物品显示状态--显示数字属性
			 * */
			public static const SHOWNUM:String = 'showNum' ;
			/**
			 * 物品显示状态--显示汉字描述
			 * */
			public static const SHOWWORD:String = 'showWord' ;
			/**
			 * 物品显示状态
			 * */
			private var _itemShowState:String = '' ;
			protected function group1_creationCompleteHandler(event:FlexEvent):void{
				width = latticeWidth ;
				height = latticeHeight ;
				cleanItem = new Bitmap();
			}
			protected function clickHandler(evt:MouseEvent):void{
				if(!lockImg.visible&&_element == null){
					return ;
				}
				evt.stopPropagation() ;
				var event:LatticeEvent = new LatticeEvent(LatticeEvent.LATTICE_CLICK) ;
				dispatchEvent(event) ;
				
			}
			
			protected function mouseOverHandler(evt:MouseEvent):void{
				if(!_mouseBeenDown&&_element!= null&&!state4.visible&&!state1.visible)
				{
					_mouseBeenDown = true ;
					state3.visible=true;
						
				}
			}
			protected function mouseOutHandler(evt:MouseEvent):void
			{
				if(_mouseBeenDown&&state!=STATE_SELECT)
				{
					_mouseBeenDown = false ;
					state3.visible=false;
				}
			}
			
			
			private var _lock:Boolean = false ;
			/**是否锁定*/
			public function set lock(value:Boolean):void{
				_lock = value ;
				mouseEnabled = mouseChildren = !_lock ;
			}
			public function get lock():Boolean{
				return _lock ;
			}
			
			
			protected var _element:Object = null ;
			public function get element():Object{
				return _element ;
			}
			
			/**添加元素*/
			public function add(element:Object):void{
				remove(false) ;
				if(_element!=element||!_element)
				{
					_element = element ;
					elementDisplay() ;
				}
			}
			
			/**移除元素
			 * @param refresh:是否刷新显示
			 * */
			public function remove(refresh:Boolean = true):void{
				if(_element == null){
					return ;
				}
				genType.visible=false;
				_element = null ;
				state3.visible=false;
				stateIndex1.visible=false;
				stateIndex2.visible=false;
				stateIndex3.visible=false;
				stateIndex4.visible=false;
				while(bit_item.numChildren != 0 )
				{
					bit_item.removeChildAt(0);
				}
				if(refresh){
					elementDisplay() ;
				}
			}
			
			/**刷新显示元素*/
			protected function elementDisplay():void{
				figure.visible = false ;
				bit_item.source = cleanItem;
				state = STATE_NORMAL ;
			}
			
			/**格子宽*/
			public function get latticeWidth():Number{
				return 66 ;
			}
			
			/**格子高*/
			public function get latticeHeight():Number{
				return 66 ;
			}
			
			public function get data():Object{
				return _element ;
			}
			
			public function set data(value:Object):void{
				add(value) ;
			}
			
			protected var _index:int = 0 ;
			/**格子在组中索引位置*/
			public function set index(value:int):void{
				_index = value ;
			}
			
			public function get index():int{
				return _index ;
			   
			}
			
			/**鼠标停留状态*/
			public static const STATE_OVER:String = 'stateOver' ;
			/**选中状态*/
			public static const STATE_SELECT:String = 'stateSelect' ;
			/**默认状态*/
			public static const STATE_NORMAL:String = 'stateNormal' ;
			/**禁用*/
			public static const DISABLED:String = 'disabled' ;
			/**不足*/
			public static const SHORTAGE:String = 'shortage' ;
			private var _state:String = '' ;
			/**几种状态的样式*/
			public function set state(value:String):void{
				_state = value ;
			}
			
			public function get state():String{
				return _state ;
			}
			
			private var _lockImgs:Boolean = false ;
			public function get lockImgs():Boolean
			{
				return _lockImgs;
			}
			
			public function set lockImgs(value:Boolean):void
			{
				_lockImgs = value;
				lockImg.visible = value;
				lockImg.x = lockImg.y = 1;
			}
			
			protected function group1_removedFromStageHandler(event:Event):void
			{
				removeEventListener(MouseEvent.CLICK , clickHandler) ;
				removeEventListener(MouseEvent.MOUSE_OVER , mouseOverHandler) ;
				removeEventListener(MouseEvent.MOUSE_OUT , mouseOutHandler) ;
			}
			
			protected function group1_addedToStageHandler(event:Event):void
			{
				addEventListener(MouseEvent.CLICK , clickHandler) ;
				addEventListener(MouseEvent.MOUSE_OVER , mouseOverHandler) ;
				addEventListener(MouseEvent.MOUSE_OUT , mouseOutHandler) ;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:SpriteVisualElement id="background" />
	<!--物品-->
	<mx:Image id="bit_item" x="5.5" y="6" width="60" height="60"/>
	<s:BitmapImage id="removeBit" visible="false" horizontalCenter="0" 
				   source="@Embed('../../../../../../../assets/images/barracks/remove.png')"
				   verticalCenter="0"/>
	<symbols:SolderType id="genType" left="5" top="6"/>
	<!--等级-->
	<symbols:FigureDisplay id="figure" right="24" bottom="36"
						   maxMedian="3" visible="false"/>
	<!--兵量、攻击、防御-->
	<symbols:FigureDisplay id="numValue" right="18" bottom="32" visible="false"
						   maxMedian="10" />
	<s:BitmapImage id="lockImg" visible="false" horizontalCenter="0" 
				   source="@Embed('../../../../../../../assets/images/barracks/lock.png')"
				   verticalCenter="0"/>
	<s:BitmapImage id="stateIndex1"  horizontalCenter="3"  visible="false"
				   source="@Embed('../../../../../../../assets/images/barracks/using.png')"
				   verticalCenter="23"/>
	<s:BitmapImage id="stateIndex2"  horizontalCenter="1" visible="false"
				   source="@Embed('../../../../../../../assets/images/barracks/commandAbility.png')"
				   verticalCenter="19"/>
	<s:BitmapImage id="stateIndex3"  horizontalCenter="-1"  visible="false"
				   source="@Embed('../../../../../../../assets/images/barracks/topLvl.png')"
				   verticalCenter="20"/>
	<s:BitmapImage id="stateIndex4"  horizontalCenter="5" visible="false"
				   source="@Embed('../../../../../../../assets/images/barracks/lv_small.png')"
				   verticalCenter="20"/>
	<s:BitmapImage id="state1" visible="false" horizontalCenter="0"
				   source="@Embed('../../../../../../../assets/images/barracks/mouseDown.png')"
				   verticalCenter="0"/>
	<s:BitmapImage id="state2" visible="false" horizontalCenter="0"
				   source="@Embed('../../../../../../../assets/images/barracks/shortage.png')"
				   verticalCenter="0"/>
	<s:BitmapImage id="state3" visible="false" horizontalCenter="0"
				   source="@Embed('../../../../../../../assets/images/barracks/mouseOver.png')"
				   verticalCenter="0"/>
	<s:BitmapImage id="state4" visible="false" horizontalCenter="0"
				   source="@Embed('../../../../../../../assets/images/barracks/disabled.png')"
				   verticalCenter="0"/>
	
</s:Group>
